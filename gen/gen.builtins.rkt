(define-builtin #%halt 0 0 )
(define-builtin return 1 1 )
(define-builtin pop 0 2 #:unspecified-result)
(define-builtin get-cont 0 3 )
(define-builtin graft-to-cont 2 4 #:unspecified-result)
(define-builtin return-to-cont 2 5 )
(define-builtin pair? 1 6 )
(define-builtin cons 2 7 )
(define-builtin car 1 8 )
(define-builtin cdr 1 9 )
(define-builtin set-car! 2 10 #:unspecified-result)
(define-builtin set-cdr! 2 11 #:unspecified-result)
(define-builtin null? 1 12 )
(define-builtin number? 1 13 )
(define-builtin = 2 14 )
(define-builtin #%+ 2 15 )
(define-builtin #%- 2 16 )
(define-builtin #%mul-non-neg 2 17 )
(define-builtin #%div-non-neg 2 18 )
(define-builtin #%rem-non-neg 2 19 )
(define-builtin < 2 20 )
(define-builtin > 2 21 )
(define-builtin bitwise-ior 2 22 )
(define-builtin bitwise-xor 2 23 )
(define-builtin bitwise-xor 2 24 )
(define-builtin bitwise-xor 1 25 )
(define-builtin eq? 2 26 )
(define-builtin not 1 27 )
(define-builtin symbol? 1 28 )
(define-builtin boolean? 1 29 )
(define-builtin string? 1 30 )
(define-builtin string->list 1 31 )
(define-builtin list->string 1 32 )
(define-builtin u8vector? 1 33 )
(define-builtin #%make-u8vector 1 34 )
(define-builtin u8vector-ref 2 35 )
(define-builtin u8vector-set! 3 36 #:unspecified-result)
(define-builtin u8vector-length 1 37 )
(define-builtin print 1 38 #:unspecified-result)
(define-builtin clock 0 39 )
(define-builtin #%getchar-wait 2 40 )
(define-builtin #%putchar 2 41 #:unspecified-result)
